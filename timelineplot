#!/bin/sh
# Make a simple line plot from a two-column file of time series data.
help() {
cat << EOFHELP

Usage:
  $0 <datafile> <imagefile> [options]
    <datafile>  --  Two-colum character delimited text file. First column must be a date. Second column must be numeric. 
    <imagefile> --  File to use for the plot output (image). 
  Optional arguments
    -sep <char>  --  Column separator for the input data file.
    -tfmt <format>  --  String describing time format in the input file.
    -xfmt <format>  --  Format string to use for x-axis labels in the plot.
    -h <pixels>  --  Height of output image.
    -w <pixels>  --  Width of output image.
    -format <format>  --  Image format (e.g. "png", "svg", "jpeg", "gif").
    -title <string>  --  Title string for plot.
    -linetitle <str>  --  Label for the line.
    -xlabel <str>  --  Label for the x-axis.
    -ylabel <str>  --  Label for y-axis.
    -xmin <time_expr>  --  Minimum value for x-axis (time).
    -xmax <time_expr>  --  Maximum value for x-axis (time).
    -ymin <number>  --  Minimum value for y-axis.
    -ymax <number>  --  Maximum value for y-axis.
    -xrot <degrees>  --  Rotation angle for labels of the x-axis tics. 
    -lc <color_expr>  --  Line color.
    -lw <pixels>  --  Line width.
    -bgcolor <color_expr>  --  Image background color.
    -grid <xtics|ytics|"noxtics noytics">  --  Modify background grid.
    -gridcolor <color_expr>  --  Set grid color.
    -font <fontname>  --  Set the font.
    -fontsize <number>  --  Set the font size.
    -fontcolor <color_expr>  --  Set the font color.

EOFHELP
}

err=0
[[ $# -lt 2 ]] && ((err++))
datafile="$1"
imagefile="$2"
shift 2
while (( $# )); do
    case $1 in
      -sep)        sep="$2"; shift 2;;
      -tfmt)       timefmt="$2"; shift 2;;
      -xfmt)       xtimefmt="$2"; shift 2;;
      -h)          height="$2"; shift 2;;
      -w)          width="$2"; shift 2;;
      -format)     format="$2"; shift 2;;
      -title)      title="$2"; shift 2;;
      -linetitle)  linetitle="$2"; shift 2;;
      -xlabel)     xlabel="$2"; shift 2;;
      -ylabel)     ylabel="$2"; shift 2;;
      -xmin)       xmin="$2"; shift 2;;
      -xmax)       xmax="$2"; shift 2;;
      -ymin)       ymin="$2"; shift 2;;
      -ymax)       ymax="$2"; shift 2;;
      -xrot)       xrot="$2"; shift 2;;
      -lc)         linecolor="$2"; shift 2;;
      -lw)         linewidth="$2"; shift 2;;
      -bgcolor)    bgcolor="$2"; shift 2;;
      -grid)       grid="$2"; shift 2;;
      -gridcolor)  gridcolor="$2"; shift 2;;
      -font)       font="$2"; shift 2;;
      -fontsize)   fontsize="$2"; shift 2;;
      -fontcolor)  fontcolor="$2"; shift 2;;
      *) echo "Unexpected parameter: $1" 1>&2; ((err++)); shift;;
    esac
done

[[ ${err} -gt 0 ]] && { help; exit 1 }

# Set any unset variables to default values 
: ${sep:="|"}
: ${timefmt:="%Y-%m-%d %H:%M:%S"}
: ${xtimefmt:=""}
: ${height:=300}
: ${width:=400}
: ${format:="png"}
: ${title:=""}
: ${linetitle:=""}
: ${xlabel:=""}
: ${ylabel:=""}
: ${xmin:=""}
: ${xmax:=""}
: ${ymin:=""}
: ${ymax:=""}
: ${xrot:=60}
: ${linecolor:="#0000FF"}
: ${linewidth:=2}
: ${bgcolor:="#FFFFFF"}
: ${grid:=""}
: ${gridcolor:="#B0B0B0"}
: ${font:="arial"}
: ${fontsize:=12}
: ${fontcolor:="#000000"}

# Add quotes around xmin and xmax if they're non-empty; need to remain unquoted if empty
[[ ${#xmin} -gt 0 ]] && xmin="\"${xmin}\""
[[ ${#xmax} -gt 0 ]] && xmax="\"${xmax}\""

xtics_align="right"
[[ ${xrot} -eq 0 ]] && xtics_align="center"

# Handle piped input by creating a temp file
if [[ "${datafile}" == "-" ]]; then
    T=$(mktemp) 
    cat > $T
    datafile="$T"
fi

gnuplot << EOF > "${imagefile}"
set datafile separator "${sep}"
set terminal ${format} size ${width},${height} font "${font},${fontsize}" background "${bgcolor}"
set title "${title}" tc "${fontcolor}"
set yrange [${ymin}:${ymax}]
set ylabel "${ylabel}" tc "${fontcolor}"
set xlabel "${xlabel}" tc "${fontcolor}"
set xdata time
set timefmt "${timefmt}" 
set xrange [${xmin}:${xmax}]
set format x "${xtimefmt}"
set xtics ${xtics_align} rotate by ${xrot} font "${font},${fontsize}" tc "${fontcolor}"
set ytics tc "${fontcolor}"
set border lc "${fontcolor}"
set key left top tc "${fontcolor}"
set grid ${grid} lc "${gridcolor}" # don't quote ${grid} since gnuplot won't like the empty quotes
plot "${datafile}" using 1:2 with lines lw ${linewidth} lt 1 lc rgbcolor "${linecolor}" title "${linetitle}"
EOF

# Delete the temp file if we created one
[[ -f "$T" ]] && rm -f "$T"
